# Copyright (C) 2024 Tiago Conceição <tiago_caza@hotmail.com>
#
# This file may be distributed under the terms of the GNU GPLv3 license.

# Enables pause/resume functionality
[gcode_macro pause]
description: Pauses the current print.
  Usage: PAUSE [Z=<pos>] [B=<beeps>]
rename_existing: _KM_PAUSE_BASE
gcode:
  {% set km = printer["gcode_macro _km_globals"] %}
  {% set P = params.P|default(2)|float %}
  {% set Z = params.Z|default(km.park_z)|float %}

  {% if printer.pause_resume.is_paused %}
    { action_respond_info("Print already paused") }
  {% elif printer.idle_timeout.state | string == "Printing" or
          (printer.virtual_sdcard|default({})).is_active|default(False) %}
    M1401 # Turn UV LED OFF
    _KM_PRINT_STATUS ACTION=CHANGE STATUS=pausing RESET_STACK=1
    {% set position = printer.gcode_move.gcode_position %}
    SET_GCODE_VARIABLE MACRO=resume VARIABLE=saved_z VALUE="{position.z}"
    { action_respond_info("Pause triggered at Z=%s mm" | format(position.z)) }
    SAVE_GCODE_STATE NAME=_KM_PAUSE_OVERRIDE_STATE
    _KM_PAUSE_BASE
    
    PARK P={P} Z={Z} LAZY=0
    _KM_BEEP_IF_AVAILABLE BEEPS={params.B|default(km.print_pause_beeps)}
  {% else %}
    { action_respond_info("Print not in progress") }
  {% endif %}

[gcode_macro m600]
description: Pauses the current print to change resin.
  Usage: M600 [B<beeps>] [Z<pos>]
gcode:
  PAUSE B="{0}" P=0 Z={printer.toolhead.axis_maximum.z}

[gcode_macro m601]
description: Pauses the current print.
  Usage: M601
gcode:
  PAUSE

[gcode_macro m602]
description: Resumes the currently paused print.
  Usage: M602
gcode:
  RESUME

[gcode_macro m24]
description: Resumes the currently paused print.
  Usage: M24
rename_existing: M24.6245197
gcode:
  {% if printer.pause_resume.is_paused %}
  RESUME
  {% else %}
  M24.6245197
  {% endif %}

[gcode_macro m25]
description: Pauses the current print.
  Usage: M25
rename_existing: M25.6245197
gcode:
  PAUSE

[gcode_macro resume]
description: Resumes the currently paused print.
  Usage: RESUME
rename_existing: _KM_RESUME_BASE
variable_saved_z: 0.0
gcode:
  {% if printer.pause_resume.is_paused %}
    {% set km = printer["gcode_macro _km_globals"] %}
    _KM_BEEP_IF_AVAILABLE BEEPS={km.print_resume_beeps}
    G90
    # Move back to last position before unretracting.
    G0 Z{saved_z} F{km.travel_speed_z}
    # Stabilization delay
    {% if km.print_resume_delay > 0 %}
      G4 P{km.print_resume_delay}
    {% endif %}
    RESTORE_GCODE_STATE NAME=_KM_PAUSE_OVERRIDE_STATE MOVE=1
    _KM_RESUME_BASE
  {% else %}
    { action_respond_info("Printer is not paused.") }
  {% endif %}
  _KM_PRINT_STATUS ACTION=CHANGE STATUS=printing RESET_STACK=1

# TODO: Fix casing after front-ends get fixed
[gcode_macro CANCEL_PRINT]
description: Cancels the current print.
  Usage: CANCEL_PRINT
rename_existing: _KM_CANCEL_PRINT_BASE
gcode:
  _KM_CHECK_IS_PRINTING
  _KM_PRINT_STATUS ACTION=CHANGE STATUS=cancelling RESET_STACK=1
  SET_GCODE_VARIABLE MACRO=_print_end_inner VARIABLE=cancelled VALUE="{True}"
  PRINT_END
  _KM_CANCEL_PRINT_BASE
  {% if printer.pause_resume.is_paused %}
    RESTORE_GCODE_STATE NAME=_KM_PAUSE_OVERRIDE_STATE MOVE=0
  {% endif %}
  CLEAR_PAUSE
  _KM_APPLY_PRINT_OFFSET RESET=1
  {% if 'virtual_sdcard' in printer and not printer.virtual_sdcard.is_active %}
    SDCARD_RESET_FILE
  {% endif %}

